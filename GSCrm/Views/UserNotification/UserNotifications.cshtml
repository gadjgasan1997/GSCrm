@{
    Layout = "_Layout";
}
@using GSCrm.Data
@using GSCrm.Data.ApplicationInfo
@using GSCrm.Models.ViewModels
@using GSCrm.Models.ViewModels.Notifications
@using static GSCrm.CommonConsts
@using GSCrm.Helpers
@using GSCrm.Notifications
@inject ApplicationDbContext context
@inject ResManager resManager
@inject IViewsInfo viewsInfo
@model UserNotificationsViewModel
@{
    IEnumerable<UserNotificationViewModel> userNotViewModels = Model.UserNotificationViewModels;
    User currentUser = User.GetUserModel(context);
    string currentUserId = currentUser.Id;
}
@* // Хлебные крошки *@
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">@resManager.GetString("Home")</a></li>
        <li class="breadcrumb-item active" aria-current="page">@resManager.GetString(NOTIFICATIONS)</li>
    </ol>
</nav>

<div class="mt-3">
    <div id="notificationsList" class="mt-3">
        <div class="text-center">
            <a class="label-md" asp-area="" asp-controller="@NOT_SETTING" asp-action="@NOT_SETTING" asp-route-id="@Model.UserNotificationsSettingId">@resManager.GetString(NOT_SETTINGS)</a>
        </div>
        @if (userNotViewModels.Count() > 0)
        {
            <form class="text-center mt-3" asp-controller="@USER_NOT" asp-action="ReadAll">
                <button id="readAllNots" class="btn btn-outline-dark">@resManager.GetString("ReadAllNots")</button>
            </form>
            @foreach (UserNotificationViewModel userNotViewModel in userNotViewModels)
            {
                switch (userNotViewModel.NotificationType)
                {
                    // Приглашение в организацию
                    case NotificationType.OrgInvite:
                        if (userNotViewModel is OrgInviteNotViewModel inviteOrgNotViewModel && inviteOrgNotViewModel.InviteOrg != null)
                            await Html.RenderPartialAsync($"{USER_NOT_VIEWS_REL_PATH}Partial/OrgInvite.cshtml", inviteOrgNotViewModel);
                        break;
                    // Удаление подразделения
                    case NotificationType.DivDelete:
                        if (userNotViewModel is DivDeleteNotViewModel divDeleteNotViewModel && divDeleteNotViewModel.Organization != null)
                            await Html.RenderPartialAsync($"{USER_NOT_VIEWS_REL_PATH}Partial/DivDelete.cshtml", divDeleteNotViewModel);
                        break;
                }
            }
        }
        else
        {
            <div class="row notifications-empty-list mt-4">
                <div class="col-auto">
                    <img src="~/img/default-empty.svg" />
                </div>
                <div class="col">
                    <div class="block-center">
                        <p class="label-md text-left">@resManager.GetString("ESNotifications")</p>
                    </div>
                </div>
            </div>
        }
        @{
            if (userNotViewModels.Count() > 0)
            {
                await Html.RenderPartialAsync("Partial/Navigation", new NavbarRenderSettings
                {
                    ItemsCount = userNotViewModels.Count(),
                    ViewInfo = viewsInfo.Get(currentUserId, USER_NOTS),
                    ControllerName = USER_NOT,
                    ActionName = USER_NOTS
                });
            }
        }
    </div>
</div>