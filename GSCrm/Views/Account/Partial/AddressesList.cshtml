@using GSCrm.Models.ViewModels
@using GSCrm.Helpers
@using GSCrm.Data
@using GSCrm.Data.Cash
@using static GSCrm.CommonConsts
@inject ApplicationDbContext context
@inject ResManager resManager
@inject ICachService cachService
@model AccountViewModel
@{
    string currentUserId = User.GetUserModel(context).Id;
    int addressesCount = Model.AccountAddresses.Count;
    bool showSearchES = addressesCount == 0 && new[] { Model.SearchAddressCity, Model.SearchAddressCountry, Model.SearchAddressHouse,
        Model.SearchAddressRegion, Model.SearchAddressStreet, Model.SearchAddressType }.IsOneStringFill();
}

@* // Фильтр по адресам *@
@{ await Html.RenderPartialAsync($"{ACC_VIEWS_REL_PATH}Partial/AccountAddressesManagement.cshtml"); }

<div id="accAddressesList">
    <form class="table-wrapper">
        <table class="fl-table @(!showSearchES ? "" : "empty-table")">
            <thead>
                @if (!showSearchES)
                {
                    <tr>
                        <th class="d-none"></th>
                        <th>@resManager.GetString("FullAddress")</th>
                        <th>@resManager.GetString("AddressType")</th>
                        <th class="action-column"></th>
                        <th class="action-column"></th>
                    </tr>
                }
                else
                {
                    <tr><th></th><th></th></tr>
                }
            </thead>
            <tbody>
                @if (showSearchES)
                {
                <tr>
                    <td><img src="~/img/page-not-found.svg" /></td>
                    <td>@resManager.GetString("ESSearchAccountAddresses")</td>
                </tr>
                }
                @foreach (AccountAddressViewModel accountAddress in Model.AccountAddresses)
                {
                    <tr>
                        <td class="address-id d-none">@accountAddress.Id</td>
                        <td class="tooltip-cell-src">@accountAddress.FullAddress</td>
                        @switch (accountAddress.AddressType)
                        {
                            case "None":
                                <td class="address-type">@resManager.GetString("NotSpecify")</td>
                                break;
                            case "Legal":
                                <td class="address-type">@resManager.GetString("Legal")</td>
                                break;
                            case "Postal":
                                <td class="address-type">@resManager.GetString("Postal")</td>
                                break;
                            case "Other":
                                <td class="address-type">@resManager.GetString("Other")</td>
                                break;
                        }
                        @if (accountAddress.AddressType == "Legal")
                        {
                            <td class="hide-remove-item-btn">
                                <div class="remove-item-url" hidden="hidden">
                                    @Html.ActionLink(accountAddress.Id.ToString(), "Delete", ACC_ADDRESS, new { id = accountAddress.Id })"
                                </div>
                                <span class="icon-bin"></span>
                            </td>
                        }
                        else
                        {
                            <td class="remove-item-btn">
                                <div class="remove-item-url" hidden="hidden">
                                    @Html.ActionLink(accountAddress.Id.ToString(), "Delete", ACC_ADDRESS, new { id = accountAddress.Id })"
                                </div>
                                <span class="icon-bin"></span>
                            </td>
                        }
                        <td class="edit-item-btn" data-toggle="modal" data-target="#accAddressUpdateModal">
                            <div class="edit-item-url" hidden="hidden">
                                @Html.ActionLink(accountAddress.Id.ToString(), ADDRESS, ACC_ADDRESS, new { id = accountAddress.Id })"
                            </div>
                            <span class="icon-pencil"></span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </form>
    @{
        await Html.RenderPartialAsync("Partial/Navigation", new NavbarRenderSettings
        {
            Id = Model.Id,
            ItemsCount = Model.AccountAddresses.Count(),
            ViewInfo = cachService.GetViewInfo(currentUserId, Model.Id, ACC_ADDRESSES),
            ControllerName = ACCOUNT,
            ActionName = ADDRESSES
        });
    }
</div>