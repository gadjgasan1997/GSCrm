@{
    Layout = "_Layout";
}
@using static GSCrm.CommonConsts
@using GSCrm.Data.ApplicationInfo
@using GSCrm.Helpers
@using GSCrm.Models.Enums
@using GSCrm.Data
@inject ApplicationDbContext context
@inject ResManager resManager
@model PositionViewModel
@using GSCrm.Data.Cash
@inject ICachService cachService
@{
    string currentUserId = User.GetUserModel(context).Id;
    ViewInfo orgView = cachService.GetViewInfo(currentUserId, ORGANIZATIONS);
}

@* // Хлебные крошки *@
<nav aria-label="breadcrumb">
    <ol class="breadcrumb wide-crumbs">
        <li class="breadcrumb-item wide-crumb"><a asp-controller="Home" asp-action="Index">@resManager.GetString("Home")</a></li>
        <li class="breadcrumb-item wide-crumb">
            <a asp-controller="Root" asp-action="@ORGANIZATIONS" asp-route-pageNumber="@orgView.CurrentPageNumber">
                @resManager.GetString(ORGANIZATIONS)
            </a>
        </li>
        <li class="breadcrumb-item wide-crumb">
            <a asp-controller="@ORGANIZATION" asp-action="@ORGANIZATION" asp-route-id="@Model.OrganizationId">
                @resManager.GetString(ORGANIZATION): @Model.OrganizationName
            </a>
        </li>
        <li class="breadcrumb-item wide-crumb active" aria-current="page">@resManager.GetString(POSITION): @Model.Name</li>
    </ol>
</nav>

@if (Model.PositionStatus == PositionStatus.Active)
{
<div id="positionForm">
    @* // Модальное окно изменения подразделения сотрудника *@
    @{ await Html.RenderPartialAsync($"{POS_VIEWS_REL_PATH}Partial/ChangeDivisionModal.cshtml"); }

    <div class="row justify-content-center mb-4 mt-4">
        <h3 class="label-non-select text-center m-0">@Model.Name</h3>
    </div>
    <div class="row mb-4">
        <div class="col-xl ml-auto ml-md-3 order-2 order-xl-1">
            <form id="positionUpdateForm" class="mt-3" asp-controller="@POSITION" asp-action="Update">
                <div id="positionFields" class="row form-group">
                    <input id="positionId" asp-for="Id" hidden="hidden" />
                    <input asp-for="OrganizationId" hidden="hidden" />
                    <input id="positionDiv" asp-for="DivisionName" hidden="hidden" />
                    <div class="col">
                        <div class="input-group">
                            <div class="input-group-prepend m-auto">
                                <span class="input-group-text" id="basic-addon1">@resManager.GetString("NameLabel")</span>
                            </div>
                            <input id="updatePosName" class="form-control" asp-for="Name" placeholder="@resManager.GetString("NameLabel")" />
                        </div>
                    </div>

                    <div class="col mt-3">
                        <div class="input-group">
                            <div class="input-group-prepend m-auto">
                                <span class="input-group-text" id="basic-addon1">@resManager.GetString("ParentPositionLabel")</span>
                            </div>
                            <div id="parentPosition" class="autocomplete default-autocomplete flex-grow-1" data-autocomplite-type="Positions" data-autocomplite-name="ParentPosition">
                                <a class="autocomplete-link" hidden="hidden" href="@Url.Content($"/Autocomplite/GetPositions/{Model.OrganizationId}/")"></a>
                                <input asp-for="ParentPositionName" class="autocomplete-input form-control" placeholder="@resManager.GetString("ParentPositionLabel")" />
                                <ul class="autocomplete-result-list"></ul>
                            </div>
                        </div>
                    </div>

                    <input asp-for="PrimaryEmployeeId" id="primaryEmployeeId" hidden="hidden" />
                    <div class="col mt-3">
                        <div class="input-group">
                            <div class="input-group-prepend m-auto">
                                <span class="input-group-text" id="basic-addon1">@resManager.GetString("PrimaryEmployeeLabel")</span>
                            </div>
                            <div id="primaryEmployee" class="autocomplete default-autocomplete flex-grow-1" data-autocomplite-type="Employees" data-autocomplite-name="PrimaryEmployee">
                                <a class="autocomplete-link" hidden="hidden" href="@Url.Content($"/Autocomplite/GetEmployeesByInitials/{Model.OrganizationId}/")"></a>
                                <input asp-for="PrimaryEmployeeInitialName" class="autocomplete-input form-control" placeholder="@resManager.GetString("PrimaryEmployeeLabel")" />
                                <ul class="autocomplete-result-list"></ul>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="positionActions" class="row">
                    <div class="col mb-2 mt-2 text-center">
                        <button id="updatePosBtn" type="submit" class="btn btn-outline-primary">@resManager.GetString("SaveChanges")</button>
                    </div>
                    <div class="col mb-2 mt-2 text-center">
                        <button id="cancelUpdatePosBtn" class="btn btn-outline-danger" data-href="@Url.Content($"~/{POSITION}/{Model.Id}/")">@resManager.GetString("CancelChanges")</button>
                    </div>
                    <div class="col mb-2 mt-2 text-center">
                        <button id="openChangeDivisionModal" type="button" class="btn btn-outline-primary" data-toggle="modal" data-target="#changePositionDivisionModal">@resManager.GetString("ChangeDivision")</button>
                    </div>
                </div>
            </form>
            <div class="form-group">
                @* // Вкладки *@
                <ul id="posTabs" class="nav nav-tabs" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link" id="employees-tab" data-toggle="tab" href="#employees" role="tab" aria-controls="employees" aria-selected="false">@resManager.GetString(POS_EMPLOYEES)</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="subpositions-tab" data-toggle="tab" href="#subpositions" role="tab" aria-controls="subpositions" aria-selected="false">@resManager.GetString(POS_SUB_POSS)</a>
                    </li>
                </ul>
                <div class="tab-content">
                    @* // Сотрудники, занимающие эту должность *@
                    @{ await Html.RenderPartialAsync($"{POS_VIEWS_REL_PATH}Partial/PositionEmployeesList.cshtml"); }

                    @* // Подчиненные должности *@
                    @{ await Html.RenderPartialAsync($"{POS_VIEWS_REL_PATH}Partial/PositionSubPositionsList.cshtml"); }
                </div>
            </div>
        </div>
        @if (Model.PositionsHierarchy.Count > 0)
        {
            <div class="col-auto mr-auto ml-auto mr-xl-3 order-1 order-xl-2">
                <div>
                    <p class="label-md label-non-select text-center">
                        @resManager.GetString("ParentPositionsLabel")
                    </p>
                </div>
                <div id="positionsHierarchy">
                    <div class="mt-3 position-relative">
                        <div class="positions-connector"></div>
                        @foreach (PositionViewModel positionViewModel in Model.PositionsHierarchy)
                        {
                            @if (positionViewModel.Name == Model.Name)
                            {
                                <div class="position-hierarchy-item position-current-item mb-2">
                                    <div class="row position-hierarchy-item-label">
                                        <div>
                                            <div class="oval-mark">
                                                <div class="icon-checkmark"></div>
                                            </div>
                                        </div>
                                        <div>
                                            <p class="label-bold-md label-non-select m-0">@positionViewModel.Name</p>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="position-hierarchy-item mb-5">
                                    <div class="position-hierarchy-link">
                                        @Html.ActionLink(positionViewModel.Name, POSITION, POSITION, new { id = positionViewModel.Id })
                                    </div>
                                    <div class="row position-hierarchy-item-label">
                                        <div>
                                            <div class="oval-mark">
                                                <div class="oval-mark-point"></div>
                                            </div>
                                        </div>
                                        <div>
                                            <p class="label-bold-md label-non-select m-0">@positionViewModel.Name</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>
}
else
{
<form id="lockPositionForm" asp-controller="@POSITION" asp-action="Unlock">
    <input id="positionLockReason" hidden="hidden" value="@Model.PositionLockReason" />
    @switch (Model.PositionLockReason)
    {
        default:
        case PositionLockReason.DivisionAbsent:
            <div class="mt-2 text-center">
                <p class="label-md">@resManager.GetString("PositionIsLock")</p>
            </div>
            <div class="mt-2">
                <input id="positionId" asp-for="Id" hidden="hidden" />
                <input asp-for="OrganizationId" hidden="hidden" />
                <div class="row">
                    <div class="col">
                        <div class="mt-4">
                            <div class="input-group mb-3">
                                <div class="input-group-prepend m-auto">
                                    <span class="input-group-text" id="basic-addon1">@resManager.GetString(DIVISION)</span>
                                </div>
                                <div id="positionDiv" class="autocomplete default-autocomplete flex-grow-1">
                                    <a class="autocomplete-link" hidden="hidden" href="@Url.Content($"/Autocomplite/GetDivisions/{Model.OrganizationId}/")"></a>
                                    <input asp-for="DivisionName" class="autocomplete-input form-control" placeholder="@resManager.GetString(DIVISION)" />
                                    <ul class="autocomplete-result-list"></ul>
                                </div>
                            </div>
                        </div>
                        <span asp-validation-for="DivisionName"></span>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col text-left">
                        <input id="unlockPosBtn" type="submit" class="btn btn-primary" value="@resManager.GetString("Unlock")" />
                    </div>
                    <div class="col text-right">
                        <input id="cancelUnlockPosBtn" type="button" class="btn btn-secondary" data-dismiss="modal" value="@resManager.GetString("CancelLabel")" />
                    </div>
                </div>
            </div>
        break;
    }
</form>
}
